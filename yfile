The following information is from https://curl.se/docs/httpscripting.html:
Using curl we can reproduce http methods:
 - GET curl localhost:80
 - HEAD curl --head localhost:80
 - POST curl --data "birthyear=1905" localhost:80 / -d works too
 - PUT curl --upload-file Makefile localhost:80
 - GET+cookie curl --cookie "name=Daniel" localhost:80
 - ANY curl -X ANY(DELETE for ex.) -> will work but not best apparently


 To check if a path is valid in a C++ manner (metacharacters not allowed)
 	std::ifstream s(char *path);
	s.good();


~/Documents not working in .conf file

https://www.digitalocean.com/community/tutorials/nginx-location-directive
Basicly the url above tells us we still have a lot to do for the locations

Not allowed in C++98:
	- string.back()/front()
	- string.pop_back()/pop_front()
	- std::to_string()
	- fstream(string) -> should use fstream(char *) instead


https://fr.wikipedia.org/wiki/Type_de_m√©dias
Extension:			Type MIME
.css: 				text/css
.html: 				text/html
.png: 				image/png
.ico:				image/vnd.microsoft.icon
.pdf:				application/pdf
.gif:				image/gif
.jpeg:				image/jpeg
TEXT: 				text/plain

cgi_env:
 -REQUEST_METHOD="GET" (ex)
 -SERVER_PROTOCOL="HTTP/1.1"
 -PATH_INFO=

execve is for executables, not python scripts


TO DO:
	good - directory listing(autoindex)
	- server names ???
	good - body_size in locations
	- body in DELETE ??
	- PUT with b.i.g. file sometimes stops
	good - .bla in location
	- 414 Request-URI Too Long
	-CGI: (CGI (the Common Gateway Interface, as it defines a common way for server software to interface with scripts))
		- set document type for GET method
		- the HTTP server runs the specified script and passes the output of the script to the Web browser.
			That is, anything that the script sends to standard output is passed to the Web client instead of 
			being shown on-screen in a terminal window.
		- PATH_INFo in cgi:
			- if a slash and additional directory name(s) are appended to the URL immediately after the name of the script
			 (in this example, /with/additional/path), then that path is stored in the PATH_INFO environment variable before
				 the script is called
		-  If parameters are sent to the script via an HTTP POST request, they are passed to the script's standard input.